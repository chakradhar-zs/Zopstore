name: Workflow-Pipeline
"on":
  push:
    branches:
      - "*"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.30
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: "password"
    steps:
      - name: Set up  Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
        id: Go

      - name: Checkout code into go module directory
        uses: actions/checkout@v2

      - name: Set up MySQL
        run: |
          docker exec -i ${{ job.services.mysql.id }} mysql -uroot -ppassword -e 'CREATE DATABASE test;'

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Test
        run: |
          export GOFR_ENV=test
          mkdir build
          go test ./... -short --tags=integration -v -coverprofile build/coverage.txt -coverpkg=./...
          cat build/coverage.txt | grep -v '.pb.go' > build/coverage.out
          go tool cover -func build/coverage.out

      - name: Setup linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.50.1
          golangci-lint --version

      - name: Code quality
        run: |
          golangci-lint run --timeout 5m0s

